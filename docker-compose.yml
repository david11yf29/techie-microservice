services:
  mongodb:
    container_name: techie_mongo_db
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - spring-boot-network
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123456

  mongo-express:
    container_name: techie_mongo_express
    image: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    networks:
      - spring-boot-network
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=123456
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH=false

  db_mysql_order:
    image: mysql:latest
    container_name: techie_mysql_order
    ports:
      - "3308:3308"
    networks:
      - spring-boot-network
    environment:
      - MYSQL_DATABASE=order-service
      - MYSQL_PASSWORD=123456
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_TCP_PORT=3308
    volumes:
      - .data:/var/lib/mysql
#      - ./init-script.sql:/docker-entrypoint-initdb.d/init-script.sql

  db_mysql_inventory:
    image: mysql:latest
    container_name: techie_mysql_inventory
    ports:
      - "3307:3307"
    networks:
      - spring-boot-network
    environment:
      - MYSQL_DATABASE=inventory-service
      - MYSQL_PASSWORD=123456
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_TCP_PORT=3307
    volumes:
      - .data2:/var/lib/mysql2
#      - ./init-script.sql:/docker-entrypoint-initdb.d/init-script.sql

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: techie_keycloak
    command: start
    #    command: start
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: root
      KEYCLOAK_ADMIN_PASSWORD: 123456
    ports:
      - "8181:8080"
    restart: always
    networks:
      - spring-boot-network

volumes:
  mongo:

networks:
  spring-boot-network:
    driver: bridge